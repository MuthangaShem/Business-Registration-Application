{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/biz-add/biz-add.component.css","webpack:///./src/app/biz-add/biz-add.component.html","webpack:///./src/app/biz-add/biz-add.component.ts","webpack:///./src/app/biz-edit/biz-edit.component.css","webpack:///./src/app/biz-edit/biz-edit.component.html","webpack:///./src/app/biz-edit/biz-edit.component.ts","webpack:///./src/app/biz-get/biz-get.component.css","webpack:///./src/app/biz-get/biz-get.component.html","webpack:///./src/app/biz-get/biz-get.component.ts","webpack:///./src/app/business.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;ACZyC;AACc;AACO;AACG;AACH;AAE9D,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,0EAAe;KAC3B;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,6EAAgB;KAC5B;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,0EAAe;KAC3B;IACD;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,0EAAe;KAC3B;CACF,CAAC;AAOF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAL5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAC;YAChE,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OAEW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;AC9B7B,+DAA+D,+H;;;;;;;;;;;ACA/D,qqB;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AACiB;AAMnB;AAOxC;IAEE,sBAAoB,WAAkC,EAAU,OAAe;QAA/E,iBAIC;QAJmB,gBAAW,GAAX,WAAW,CAAuB;QAAU,YAAO,GAAP,OAAO,CAAQ;QAD/E,UAAK,GAAG,WAAW,CAAC;QAElB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,KAAY;YACzC,KAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC;IACO,4CAAqB,GAA7B,UAA8B,KAAY;QACxC,IAAI,KAAK,YAAY,+DAAe,EAAE;YACpC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;SAC1B;QACD,IAAI,KAAK,YAAY,6DAAa,EAAE;YAClC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;SAC7B;QACD,IAAI,KAAK,YAAY,gEAAgB,EAAE;YACrC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;SACzB;QACD,IAAI,KAAK,YAAY,+DAAe,EAAE;YACpC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;SACzB;IACH,CAAC;IApBU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;yCAGiC,0EAAqB,EAAmB,sDAAM;OAFpE,YAAY,CAqBxB;IAAD,mBAAC;CAAA;AArBwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdiC;AACjB;AAEe;AACH;AACG;AACI;AAEb;AACe;AACA;AACG;AAEZ;AAmBrD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAjBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,0EAAe;gBACf,0EAAe;gBACf,6EAAgB;aACjB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,yEAAoB;gBACpB,kEAAmB;gBACnB,qEAAgB;aACjB;YACD,SAAS,EAAE,CAAE,kEAAe,CAAE;YAC9B,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AChCtB,+DAA+D,+I;;;;;;;;;;;ACA/D,kqE;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACoB;AAChB;AACG;AAQzD;IAGE,yBAAoB,EAAe,EAAU,EAAmB,EAAS,KAAqB,EACpF,MAAc;QADJ,OAAE,GAAF,EAAE,CAAa;QAAU,OAAE,GAAF,EAAE,CAAiB;QAAS,UAAK,GAAL,KAAK,CAAgB;QACpF,WAAM,GAAN,MAAM,CAAQ;QACtB,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,oCAAU,GAAV;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACtC,aAAa,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,mBAAmB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;oBAC3C,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;oBACvB,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;oBACvB,yDAAU,CAAC,OAAO,CAAC,mBAAmB,CAAC;oBACvC,yDAAU,CAAC,QAAQ;iBAAC,CAAC,CAAC;SAEzB,CAAC;IACJ,CAAC;IAAA,CAAC;IAEF,qCAAW,GAAX,UAAY,WAAW,EAAE,YAAY,EAAE,mBAAmB;QACxD,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,WAAW,EAAE,YAAY,EAAE,mBAAmB,CAAC,CAAC;QACpE,IAAG,IAAI,CAAC,OAAO,CAAC,KAAK,EAAC;YACpB,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YAC/B,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;SACtB;IACH,CAAC;IAED,kCAAQ,GAAR;IACA,CAAC;IA9BU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,yGAAuC;;SAExC,CAAC;yCAIwB,0DAAW,EAAc,iEAAe,EAAgB,8DAAc;YAC5E,sDAAM;OAJb,eAAe,CA+B3B;IAAD,sBAAC;CAAA;AA/B2B;;;;;;;;;;;;ACX5B,+DAA+D,mJ;;;;;;;;;;;ACA/D,8tE;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACO;AACa;AAChB;AAOtD;IAKE,0BAAoB,KAAqB,EAC/B,MAAc,EACd,EAAmB,EACnB,EAAe;QAHL,UAAK,GAAL,KAAK,CAAgB;QAC/B,WAAM,GAAN,MAAM,CAAQ;QACd,OAAE,GAAF,EAAE,CAAiB;QACnB,OAAE,GAAF,EAAE,CAAa;QALzB,aAAQ,GAAQ,EAAE,CAAC;QAMf,IAAI,CAAC,UAAU,EAAE,CAAC;IACnB,CAAC;IAEJ,qCAAU,GAAV;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACzB,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;YACvC,aAAa,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;YACzC,mBAAmB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE;SAChD,CAAC,CAAC;IACL,CAAC;IAGH,mCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAChC,KAAI,CAAC,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,aAAG;gBAC9C,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;YACtB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAc,GAAd,UAAe,WAAW,EAAE,aAAa,EAAE,mBAAmB;QAA9D,iBAKD;QAJE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAC/B,KAAI,CAAC,EAAE,CAAC,cAAc,CAAC,WAAW,EAAE,aAAa,EAAE,mBAAmB,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YACtF,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACN,CAAC;IAlCY,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,4GAAwC;;SAEzC,CAAC;yCAM2B,8DAAc;YACvB,sDAAM;YACV,iEAAe;YACf,0DAAW;OARd,gBAAgB,CAmC5B;IAAD,uBAAC;CAAA;AAnC4B;;;;;;;;;;;;ACV7B,+DAA+D,+I;;;;;;;;;;;ACA/D,iUAAiU,wBAAwB,yBAAyB,0BAA0B,yBAAyB,gCAAgC,2P;;;;;;;;;;;;;;;;;;;;;;;;;ACAnZ;AAEI;AAOtD;IAIE,yBAAoB,EAAmB;QAAnB,OAAE,GAAF,EAAE,CAAiB;IAAI,CAAC;IAE5C,kCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,EAAE;aACJ,aAAa,EAAE;aACf,SAAS,CAAC,UAAC,IAAgB;YAC1B,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAc,GAAd,UAAe,EAAE;QAAjB,iBASC;QARC,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YACtC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACxB,KAAI,CAAC,EAAE;iBACN,aAAa,EAAE;iBACf,SAAS,CAAC,UAAC,IAAgB;gBAC1B,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAC3B,CAAC,CAAC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAvBU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,yGAAuC;;SAExC,CAAC;yCAKwB,iEAAe;OAJ5B,eAAe,CAyB3B;IAAD,sBAAC;CAAA;AAzB2B;;;;;;;;;;;;;;;;;;;;;;;;;;ACTe;AACO;AAKlD;IAIE,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,QAAG,GAAG,gCAAgC,CAAC;IAEC,CAAC;IAEzC,qCAAW,GAAX,UAAY,WAAW,EAAE,aAAa,EAAE,mBAAmB;QACzD,IAAM,GAAG,GAAG;YACV,WAAW,EAAE,WAAW;YACxB,aAAa,EAAE,aAAa;YAC5B,mBAAmB,EAAE,mBAAmB;SACzC,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,GAAG,SAAM,EAAE,GAAG,CAAC;aACjC,SAAS,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAnB,CAAmB,CAAC,CAAC;IAC7C,CAAC;IAED,uCAAa,GAAb;QACE,OAAO,IAAI;aACH,IAAI;aACJ,GAAG,CAAC,KAAG,IAAI,CAAC,GAAK,CAAC,CAAC;IAC7B,CAAC;IAED,sCAAY,GAAZ,UAAa,EAAE;QACb,OAAO,IAAI;aACF,IAAI;aACJ,GAAG,CAAI,IAAI,CAAC,GAAG,cAAS,EAAI,CAAC,CAAC;IACvC,CAAC;IAEH,wCAAc,GAAd,UAAe,WAAW,EAAE,aAAa,EAAE,mBAAmB,EAAE,EAAE;QAEhE,IAAM,GAAG,GAAG;YACR,WAAW,EAAE,WAAW;YACxB,aAAa,EAAE,aAAa;YAC5B,mBAAmB,EAAE,mBAAmB;SACzC,CAAC;QACJ,IAAI;aACD,IAAI;aACJ,IAAI,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,EAAE,GAAG,CAAC;aACrC,SAAS,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAnB,CAAmB,CAAC,CAAC;IAC3C,CAAC;IAEF,wCAAc,GAAd,UAAe,EAAE;QACd,OAAO,IAAI;aACA,IAAI;aACJ,GAAG,CAAI,IAAI,CAAC,GAAG,gBAAW,EAAI,CAAC,CAAC;IAC7C,CAAC;IA7CU,eAAe;QAH3B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK0B,+DAAU;OAJzB,eAAe,CA8C3B;IAAD,sBAAC;CAAA;AA9C2B;;;;;;;;;;;;;ACN5B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,IAAI;CACjB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BizAddComponent } from './biz-add/biz-add.component';\r\nimport { BizEditComponent } from './biz-edit/biz-edit.component';\r\nimport { BizGetComponent } from './biz-get/biz-get.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'business/create',\r\n    component: BizAddComponent\r\n  },\r\n  {\r\n    path: 'edit/:id',\r\n    component: BizEditComponent\r\n  },\r\n  {\r\n    path: 'business',\r\n    component: BizGetComponent\r\n  },\r\n  {\r\n    path: '',\r\n    component: BizGetComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { enableTracing: true })],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<ng2-slim-loading-bar color=\\\"blue\\\"></ng2-slim-loading-bar>\\r\\n\\r\\n<nav class=\\\"navbar navbar-expand-sm bg-light\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <ul class=\\\"navbar-nav\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a routerLink=\\\"\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\r\\n          Business\\r\\n        </a>\\r\\n      </li> \\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a routerLink=\\\"business/create\\\" class=\\\"nav-link\\\" routerLinkActive=\\\"active\\\">\\r\\n          Create Business\\r\\n        </a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\\r\\n<br />\\r\\n<div class=\\\"container\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport {SlimLoadingBarService} from 'ng2-slim-loading-bar';\r\nimport { NavigationCancel,\r\n        Event,\r\n        NavigationEnd,\r\n        NavigationError,\r\n        NavigationStart,\r\n        Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'mean-crud';\r\n  constructor(private _loadingBar: SlimLoadingBarService, private _router: Router) {\r\n    this._router.events.subscribe((event: Event) => {\r\n      this.navigationInterceptor(event);\r\n    });\r\n  }\r\n  private navigationInterceptor(event: Event): void {\r\n    if (event instanceof NavigationStart) {\r\n      this._loadingBar.start();\r\n    }\r\n    if (event instanceof NavigationEnd) {\r\n      this._loadingBar.complete();\r\n    }\r\n    if (event instanceof NavigationCancel) {\r\n      this._loadingBar.stop();\r\n    }\r\n    if (event instanceof NavigationError) {\r\n      this._loadingBar.stop();\r\n    }\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SlimLoadingBarModule } from 'ng2-slim-loading-bar';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { BizAddComponent } from './biz-add/biz-add.component';\r\nimport { BizGetComponent } from './biz-get/biz-get.component';\r\nimport { BizEditComponent } from './biz-edit/biz-edit.component';\r\n\r\nimport { BusinessService } from './business.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    BizAddComponent,\r\n    BizGetComponent,\r\n    BizEditComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    SlimLoadingBarModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [ BusinessService ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jpei1hZGQvYml6LWFkZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"card\\\">\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <form [formGroup]=\\\"angForm\\\" novalidate>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"col-md-4\\\">Person Name</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"person_name\\\" #person_name/>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"angForm.controls['person_name'].invalid && (angForm.controls['person_name'].dirty || angForm.controls['person_name'].touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n        <div *ngIf=\\\"angForm.controls['person_name'].errors.required\\\">\\r\\n          Person Name is required.\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"col-md-4\\\">Business Name </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"business_name\\\" #business_name />\\r\\n      </div>\\r\\n      <div *ngIf=\\\"angForm.controls['business_name'].invalid && (angForm.controls['business_name'].dirty || angForm.controls['business_name'].touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n        <div *ngIf=\\\"angForm.controls['business_name'].errors.required\\\">\\r\\n          Person Business is required.\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"col-md-4\\\">Business kra Number </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"business_kra_number\\\" #business_kra_number />\\r\\n      </div>\\r\\n      <div *ngIf=\\\"angForm.controls['business_kra_number'].invalid && (angForm.controls['business_kra_number'].dirty || angForm.controls['business_kra_number'].touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n        <div *ngIf=\\\"angForm.controls['business_kra_number'].errors.required\\\">\\r\\n          Business kra Number is required.\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <button (click)=\\\"addBusiness(person_name.value, business_name.value, business_kra_number.value)\\\"\\r\\n        [disabled]=\\\"angForm.pristine || angForm.invalid\\\"\\r\\n        routerLink=\\\"\\\" routerLinkActive=\\\"active\\\"\\r\\n        class=\\\"btn btn-primary\\\" type=\\\"button\\\">Add Business</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\r\nimport { BusinessService } from '../business.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-biz-add',\r\n  templateUrl: './biz-add.component.html',\r\n  styleUrls: ['./biz-add.component.css']\r\n})\r\nexport class BizAddComponent implements OnInit {\r\n\r\n  angForm: FormGroup;\r\n  constructor(private fb: FormBuilder, private bs: BusinessService,private route: ActivatedRoute,\r\n    private router: Router) {\r\n    this.createForm(); \r\n  }\r\n\r\n  createForm(){\r\n    this.angForm = this.fb.group({\r\n      person_name: ['', Validators.required],\r\n      business_name: ['', Validators.required],\r\n      business_kra_number: ['', Validators.compose([\r\n        Validators.minLength(7),\r\n        Validators.maxLength(7),\r\n        Validators.pattern(/^-?(0|[0-9]\\d*)?$/),\r\n        Validators.required])],\r\n        \r\n    })\r\n  };\r\n\r\n  addBusiness(person_name, busines_name, business_kra_number) {\r\n    this.bs.addBusiness(person_name, busines_name, business_kra_number);\r\n    if(this.angForm.valid){\r\n      console.log(\"Form Submitted!\");\r\n      this.angForm.reset();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jpei1lZGl0L2Jpei1lZGl0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"card\\\">\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <form [formGroup]=\\\"angForm\\\" novalidate>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"col-md-4\\\">Person Name</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"person_name\\\" #person_name [(ngModel)] = \\\"business.person_name\\\" />\\r\\n      </div>\\r\\n      <div *ngIf=\\\"angForm.controls['person_name'].invalid && (angForm.controls['person_name'].dirty || angForm.controls['person_name'].touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n        <div *ngIf=\\\"angForm.controls['person_name'].errors.required\\\">\\r\\n          Person Name is required.\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"col-md-4\\\">Business Name </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"business_name\\\" #business_name [(ngModel)] = \\\"business.business_name\\\" />\\r\\n      </div>\\r\\n      <div *ngIf=\\\"angForm.controls['business_name'].invalid && (angForm.controls['business_name'].dirty || angForm.controls['business_name'].touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n        <div *ngIf=\\\"angForm.controls['business_name'].errors.required\\\">\\r\\n          Person Business is required.\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"col-md-4\\\">Business KRA Number </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"business_kra_number\\\" #business_kra_number [(ngModel)] = \\\"business.business_kra_number\\\" />\\r\\n      </div>\\r\\n      <div *ngIf=\\\"angForm.controls['business_kra_number'].invalid && (angForm.controls['business_kra_number'].dirty || angForm.controls['business_kra_number'].touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n        <div *ngIf=\\\"angForm.controls['business_kra_number'].errors.required\\\">\\r\\n          Business KRA Number is required.\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <button (click)=\\\"updateBusiness(person_name.value, business_name.value, business_kra_number.value)\\\"\\r\\n        [disabled]=\\\"angForm.invalid\\\" \\r\\n        class=\\\"btn btn-primary\\\" type=\\\"button\\\">Update Business</button>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\r\nimport { BusinessService } from '../business.service';\r\n\r\n@Component({\r\n  selector: 'app-biz-edit',\r\n  templateUrl: './biz-edit.component.html',\r\n  styleUrls: ['./biz-edit.component.css']\r\n})\r\nexport class BizEditComponent implements OnInit {\r\n\r\n  angForm: FormGroup;\r\n  business: any = {};\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private router: Router,\r\n    private bs: BusinessService,\r\n    private fb: FormBuilder) {\r\n      this.createForm();\r\n     }\r\n\r\n  createForm() {\r\n    this.angForm = this.fb.group({\r\n        person_name: ['', Validators.required ],\r\n        business_name: ['', Validators.required ],\r\n        business_kra_number: ['', Validators.required ]\r\n      });\r\n    }\r\n\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(params => {\r\n      this.bs.editBusiness(params['id']).subscribe(res => {\r\n        this.business = res;\r\n      });\r\n    });\r\n  }\r\n\r\n  updateBusiness(person_name, business_name, business_kra_number) {\r\n   this.route.params.subscribe(params => {\r\n      this.bs.updateBusiness(person_name, business_name, business_kra_number, params['id']);\r\n      this.router.navigate(['']);\r\n   });\r\n}\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jpei1nZXQvYml6LWdldC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<table class=\\\"table table-hover\\\">\\r\\n  <thead>\\r\\n  <tr>\\r\\n      <td>Person Name</td>\\r\\n      <td>Business Name</td>\\r\\n      <td>GST Number</td>\\r\\n      <td colspan=\\\"2\\\">Actions</td>\\r\\n  </tr>\\r\\n  </thead>\\r\\n\\r\\n  <tbody>\\r\\n      <tr *ngFor=\\\"let business of businesses\\\">\\r\\n          <td>{{ business.person_name }}</td>\\r\\n          <td>{{ business.business_name }}</td>\\r\\n          <td>{{ business.business_kra_number }}</td>\\r\\n          <td><a [routerLink]=\\\"['edit', business._id]\\\" class=\\\"btn btn-primary\\\">Edit</a></td>\\r\\n          <td><a (click) = \\\"deleteBusiness(business._id)\\\" class=\\\"btn btn-danger\\\">Delete</a></td>\\r\\n      </tr>\\r\\n  </tbody>\\r\\n</table>\"","import { Component, OnInit } from '@angular/core';\r\nimport Business from '../Business.model';\r\nimport { BusinessService } from '../business.service';\r\n\r\n@Component({\r\n  selector: 'app-biz-get',\r\n  templateUrl: './biz-get.component.html',\r\n  styleUrls: ['./biz-get.component.css']\r\n})\r\nexport class BizGetComponent implements OnInit {\r\n\r\n  businesses: Business[];\r\n\r\n  constructor(private bs: BusinessService) { }\r\n\r\n  ngOnInit() {\r\n    this.bs\r\n      .getBusinesses()\r\n      .subscribe((data: Business[]) => {\r\n        this.businesses = data;\r\n    });\r\n  }\r\n\r\n  deleteBusiness(id) {\r\n    this.bs.deleteBusiness(id).subscribe(res => {\r\n      console.log('Deleted!');\r\n      this.bs\r\n      .getBusinesses()\r\n      .subscribe((data: Business[]) => {\r\n        this.businesses = data;\r\n    });\r\n    });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BusinessService {\r\n\r\n  uri = 'http://localhost:8080/business';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  addBusiness(person_name, business_name, business_kra_number) {\r\n    const obj = {\r\n      person_name: person_name,\r\n      business_name: business_name,\r\n      business_kra_number: business_kra_number\r\n    };\r\n    this.http.post(`${this.uri}/add`, obj)\r\n        .subscribe(res => console.log('Done'));\r\n  }\r\n\r\n  getBusinesses() {\r\n    return this\r\n           .http\r\n           .get(`${this.uri}`);\r\n  }\r\n\r\n  editBusiness(id) {\r\n    return this\r\n            .http\r\n            .get(`${this.uri}/edit/${id}`);\r\n    }\r\n\r\n  updateBusiness(person_name, business_name, business_kra_number, id) {\r\n\r\n    const obj = {\r\n        person_name: person_name,\r\n        business_name: business_name,\r\n        business_kra_number: business_kra_number\r\n      };\r\n    this\r\n      .http\r\n      .post(`${this.uri}/update/${id}`, obj)\r\n      .subscribe(res => console.log('Done'));\r\n  }\r\n\r\n deleteBusiness(id) {\r\n    return this\r\n              .http\r\n              .get(`${this.uri}/delete/${id}`);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: true\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}